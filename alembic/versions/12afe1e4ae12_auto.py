"""auto

Revision ID: 12afe1e4ae12
Revises: 36e916a07e5b
Create Date: 2025-02-21 11:10:40.581335

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '12afe1e4ae12'
down_revision: Union[str, None] = '36e916a07e5b'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('movie_genre_associations')
    op.drop_table('movie_screening_likes')
    op.drop_table('movie_screening_locations')
    op.drop_index('ix_movie_genres_id', table_name='movie_genres')
    op.drop_table('movie_genres')
    op.drop_table('link_translations')
    op.drop_table('sport_course_likes')
    op.drop_table('links')
    op.create_foreign_key(None, 'movie_screenings', 'cinemas', ['cinema_id'], ['id'], ondelete='CASCADE')
    op.add_column('movie_translations', sa.Column('genres', sa.ARRAY(sa.String()), nullable=True))
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('movie_translations', 'genres')
    op.drop_constraint(None, 'movie_screenings', type_='foreignkey')
    op.create_table('links',
    sa.Column('id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('url', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('favicon_url', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('types', postgresql.ARRAY(sa.VARCHAR()), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='links_pkey')
    )
    op.create_table('sport_course_likes',
    sa.Column('sport_course_id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['sport_course_id'], ['sport_course.id'], name='sport_course_likes_sport_course_id_fkey', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='sport_course_likes_user_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('sport_course_id', 'user_id', name='sport_course_likes_pkey')
    )
    op.create_table('link_translations',
    sa.Column('link_id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('aliases', postgresql.ARRAY(sa.VARCHAR()), autoincrement=False, nullable=True),
    sa.Column('title', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('description', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('language', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('link_id', 'language', name='link_translations_pkey')
    )
    op.create_table('movie_genres',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='movie_genres_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index('ix_movie_genres_id', 'movie_genres', ['id'], unique=False)
    op.create_table('movie_screening_locations',
    sa.Column('screening_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('address', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('latitude', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('longitude', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['screening_id'], ['movie_screenings.id'], name='movie_screening_locations_screening_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('screening_id', 'address', name='movie_screening_locations_pkey')
    )
    op.create_table('movie_screening_likes',
    sa.Column('movie_screening_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['movie_screening_id'], ['movie_screenings.id'], name='movie_screening_likes_movie_screening_id_fkey', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='movie_screening_likes_user_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('movie_screening_id', 'user_id', name='movie_screening_likes_pkey')
    )
    op.create_table('movie_genre_associations',
    sa.Column('movie_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('genre_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['genre_id'], ['movie_genres.id'], name='movie_genre_associations_genre_id_fkey', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['movie_id'], ['movies.id'], name='movie_genre_associations_movie_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('movie_id', 'genre_id', name='movie_genre_associations_pkey')
    )
    # ### end Alembic commands ###
