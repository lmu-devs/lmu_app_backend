upstream fastapi_app {
    server 127.0.0.1:8001; # FastAPI runs on port 8001
}

upstream pgadmin {
    server 127.0.0.1:5050; # pgAdmin port
}

upstream metabase {
    server 127.0.0.1:3000; # metabase port
}

# Add CORS map at the http level
map $http_origin $cors_origin {
    default "";
    "http://localhost:53480" "$http_origin";
    "https://students-app.lmu-dev.org" "$http_origin";
}

server {
    server_name api.lmu-dev.org;

    location / {
        # Move CORS headers inside location block
        add_header 'Access-Control-Allow-Origin' $cors_origin always;
        add_header 'Access-Control-Allow-Methods' 'GET, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'Authorization,Content-Type,Accept,Origin,User-Agent,DNT,Cache-Control,X-Mx-ReqToken,Keep-Alive,X-Requested-With,If-Modified-Since' always;
        add_header 'Access-Control-Allow-Credentials' 'true' always;

        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' $cors_origin always;
            add_header 'Access-Control-Allow-Methods' 'GET, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'Authorization,Content-Type,Accept,Origin,User-Agent,DNT,Cache-Control,X-Mx-ReqToken,Keep-Alive,X-Requested-With,If-Modified-Since' always;
            add_header 'Access-Control-Allow-Credentials' 'true' always;
            add_header 'Content-Type' 'text/plain charset=UTF-8';
            add_header 'Content-Length' 0;
            return 204;
        }

        proxy_pass http://fastapi_app;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/api.lmu-dev.org/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/api.lmu-dev.org/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

}


server {
    if ($host = api.lmu-dev.org) {
        return 301 https://$host$request_uri;
    }


    listen 80;
    server_name api.lmu-dev.org;
    return 404; 
}




server {
    listen 443 ssl;
    server_name pgadmin.lmu-dev.org;

    
    location / {
        proxy_pass http://pgadmin;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_redirect off;
        
        # Websocket support
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        
        # Additional headers for better compatibility
        proxy_set_header X-Scheme $scheme;
        proxy_set_header X-WEBAUTH-USER "";
        
        # Timeouts for long-running queries
        proxy_connect_timeout 600s;
        proxy_send_timeout 600s;
        proxy_read_timeout 600s;
    }

    ssl_certificate /etc/letsencrypt/live/pgadmin.lmu-dev.org/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/pgadmin.lmu-dev.org/privkey.pem; # managed by Certbot
}

# PgAdmin HTTP redirect block
server {
    if ($host = pgadmin.lmu-dev.org) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


    listen 80;
    server_name pgadmin.lmu-dev.org;
    
    location / {
        return 301 https://$host$request_uri;
    }


}



server {
    listen 443 ssl;
    server_name metabase.lmu-dev.org;

    
    location / {
        proxy_pass http://metabase;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_redirect off;
        
        # Timeouts for long-running queries
        proxy_connect_timeout 600s;
        proxy_send_timeout 600s;
        proxy_read_timeout 600s;
    }


    ssl_certificate /etc/letsencrypt/live/metabase.lmu-dev.org/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/metabase.lmu-dev.org/privkey.pem; # managed by Certbot
}

# metabase HTTP redirect block
server {
    if ($host = metabase.lmu-dev.org) {
        return 301 https://$host$request_uri;
    }


    listen 80;
    server_name metabase.lmu-dev.org;
    
    location / {
        return 301 https://$host$request_uri;
    }


}


